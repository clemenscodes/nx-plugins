function(link_shared_library PROJECT LIB)
    set(PREFIX "lib")
    set(LIB_WITH_PREFIX ${PREFIX}${LIB})
    add_library(${LIB_WITH_PREFIX} SHARED IMPORTED)
    if(${CMAKE_SYSTEM_NAME} STREQUAL "Windows")
        set_target_properties(${LIB_WITH_PREFIX} PROPERTIES IMPORTED_LOCATION ${CMAKE_LIBRARY_PATH}/${LIB}/${CMAKE_BUILD_TYPE}/bin/${LIB_WITH_PREFIX}.dll)
        set_target_properties(${LIB_WITH_PREFIX} PROPERTIES IMPORTED_IMPLIB ${CMAKE_LIBRARY_PATH}/${LIB}/${CMAKE_BUILD_TYPE}/lib/${LIB_WITH_PREFIX}.dll.a)
    else()
        set_target_properties(${LIB_WITH_PREFIX} PROPERTIES IMPORTED_LOCATION ${CMAKE_LIBRARY_PATH}/${LIB}/${CMAKE_BUILD_TYPE}/lib/${LIB_WITH_PREFIX}.so)
    endif()
    target_link_libraries(${PROJECT} ${LIB_WITH_PREFIX})
    set(LIB_DIR ${WORKSPACE_LIBRARY_DIR}/${LIB})
    target_include_directories(${PROJECT} PRIVATE ${LIB_DIR})
    target_include_directories(${PROJECT} PRIVATE ${LIB_DIR}/include)
    target_include_directories(${PROJECT} PRIVATE ${LIB_DIR}/src)
    target_link_options(${PROJECT} PRIVATE "-Wl,--as-needed")
    add_custom_command(TARGET ${PROJECT} POST_BUILD
        COMMAND ${CMAKE_COMMAND} -E copy -t $<TARGET_FILE_DIR:${PROJECT}> $<TARGET_RUNTIME_DLLS:${PROJECT}>
        COMMAND_EXPAND_LISTS
    )
endfunction()
