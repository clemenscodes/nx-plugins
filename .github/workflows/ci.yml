name: CI

on:
    push:
        branches: [main]
    pull_request:
        types: [opened, synchronize]

concurrency:
    group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
    cancel-in-progress: true

env:
    NX_CLOUD_DISTRIBUTED_EXECUTION_AGENT_COUNT: 2
    NX_CLOUD_DISTRIBUTED_EXECUTION: true
    NX_EXEC: 'pnpm nx affected --nx-bail --base=$NX_BASE --head=$NX_HEAD --output-style=stream --parallel=$NX_CLOUD_DISTRIBUTED_EXECUTION_AGENT_COUNT -t'

jobs:
    deps:
        strategy:
            matrix:
                os: [ubuntu-latest, macos-latest, windows-latest]
        name: Deps [${{ matrix.os }}]
        permissions:
            contents: read
            actions: read
        runs-on: ${{ matrix.os }}
        steps:
            - name: Checkout [Pull Request]
              uses: actions/checkout@v3
              if: github.event_name == 'pull_request'
              with:
                  ref: ${{ github.event.pull_request.head.sha }}
                  fetch-depth: 0

            - name: Checkout [Main]
              uses: actions/checkout@v3
              if: github.event_name != 'pull_request'
              with:
                  fetch-depth: 0

            - name: Derive SHAs
              uses: nrwl/nx-set-shas@v3

            - name: Install pnpm
              uses: pnpm/action-setup@v2
              id: pnpm-install
              with:
                  version: latest
                  run_install: false

            - name: Install Node
              uses: actions/setup-node@v3
              with:
                  node-version: lts/*
                  cache: 'pnpm'

            - name: Install dependencies
              if: steps.cache.outputs.cache-hit != 'true'
              run: pnpm install --no-frozen-lockfile

            - name: Check format
              run: pnpm nx format:check --all

    set-agents:
        name: Set Agent Matrix
        runs-on: ubuntu-latest
        outputs:
            matrix: ${{ steps.set-matrix.outputs.matrix }}
        steps:
            - name: Calculate Matrix
              id: set-matrix
              shell: bash
              run: |
                  AGENTS_JSON_ARRAY=$(node -e "
                    const agents = Array.from(new Array($NX_CLOUD_DISTRIBUTED_EXECUTION_AGENT_COUNT)).map((_, i) => i + 1);
                    console.log(JSON.stringify(agents));
                  ")
                  echo $AGENTS_JSON_ARRAY
                  echo "matrix=$AGENTS_JSON_ARRAY" >> $GITHUB_OUTPUT

    agents:
        name: Agent ${{ matrix.agent }} [${{ matrix.os }}]
        needs: [set-agents, deps]
        runs-on: ${{ matrix.os }}
        permissions:
            contents: read
            actions: read
        defaults:
            run:
                shell: bash
        strategy:
            matrix:
                os:
                    - ubuntu-latest
                    - macos-latest
                    - windows-latest
                agent:
                    - ${{ fromJson(needs.set-agents.outputs.matrix) }}
        steps:
            - name: Checkout [Pull Request]
              uses: actions/checkout@v3
              if: github.event_name == 'pull_request'
              with:
                  ref: ${{ github.event.pull_request.head.sha }}
                  fetch-depth: 0

            - name: Checkout [Main]
              uses: actions/checkout@v3
              if: github.event_name != 'pull_request'
              with:
                  fetch-depth: 0

            - name: Derive SHAs
              uses: nrwl/nx-set-shas@v3

            - name: Install pnpm
              uses: pnpm/action-setup@v2
              id: pnpm-install
              with:
                  version: latest
                  run_install: false

            - name: Install Node
              uses: actions/setup-node@v3
              with:
                  node-version: lts/*
                  cache: 'pnpm'

            - name: Install dependencies
              run: pnpm install --no-frozen-lockfile

            - name: Install gdb
              if: matrix.os == 'ubuntu-latest'
              run: |
                  sudo apt-get update -y
                  sudo apt-get install gdb -y

            - name: Run Agent
              run: npx nx-cloud start-agent

    main:
        strategy:
            matrix:
                os: [ubuntu-latest, macos-latest, windows-latest]
        name: Main Job [${{ matrix.os }}]
        permissions:
            contents: read
            actions: read
        runs-on: ${{ matrix.os }}
        needs: [set-agents, deps]
        steps:
            - name: Checkout [Pull Request]
              uses: actions/checkout@v3
              if: github.event_name == 'pull_request'
              with:
                  ref: ${{ github.event.pull_request.head.sha }}
                  fetch-depth: 0

            - name: Checkout [Main]
              uses: actions/checkout@v3
              if: github.event_name != 'pull_request'
              with:
                  fetch-depth: 0

            - name: Derive SHAs
              uses: nrwl/nx-set-shas@v3

            - name: Install pnpm
              uses: pnpm/action-setup@v2
              id: pnpm-install
              with:
                  version: latest
                  run_install: false

            - name: Install Node
              uses: actions/setup-node@v3
              with:
                  node-version: lts/*

            - name: Install dependencies
              run: pnpm install --no-frozen-lockfile

            - name: Install gdb
              if: matrix.os == 'ubuntu-latest'
              run: |
                  sudo apt-get update -y
                  sudo apt-get install gdb -y

            - name: Start Agents
              if: needs.agents.result != 'failure' &&
                  needs.agents.result != 'cancelled' &&
                  needs.agents.result != 'skipped'
              run: npx nx-cloud start-ci-run --stop-agents-after=e2e

            - name: Run Agents
              id: agents
              if: needs.agents.result != 'failure' &&
                  needs.agents.result != 'cancelled' &&
                  needs.agents.result != 'skipped'
              uses: jameshenry/parallel-bash-commands@v1
              with:
                  cmd1: $NX_EXEC build
                  cmd2: $NX_EXEC lint --configuration=ci
                  cmd3: $NX_EXEC test --configuration=ci
                  cmd4: $NX_EXEC e2e --configuration=ci

            - name: Stop Agents
              if: always()
              run: npx nx-cloud stop-all-agents

            - name: Upload coverage reports to Codecov
              uses: codecov/codecov-action@v3
              env:
                  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

    publish:
        name: Publish
        runs-on: ubuntu-latest
        needs: [main, agents]
        permissions:
            contents: write
            actions: read
        steps:
            - name: Checkout [Pull Request]
              uses: actions/checkout@v3
              if: github.event_name == 'pull_request' && startsWith(github.ref, 'refs/heads/main')
              with:
                  ref: ${{ github.event.pull_request.head.sha }}
                  fetch-depth: 0

            - name: Checkout [Main]
              uses: actions/checkout@v3
              if: github.event_name != 'pull_request' && startsWith(github.ref, 'refs/heads/main')
              with:
                  fetch-depth: 0
                  token: ${{ secrets.PAT }}

            - name: Derive SHAs
              if: startsWith(github.ref, 'refs/heads/main')
              uses: nrwl/nx-set-shas@v3

            - name: Install Node
              if: startsWith(github.ref, 'refs/heads/main')
              uses: actions/setup-node@v3
              with:
                  node-version: lts/*
                  registry-url: 'https://registry.npmjs.org'
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Install pnpm
              if: startsWith(github.ref, 'refs/heads/main')
              uses: pnpm/action-setup@v2
              id: pnpm-install
              with:
                  version: latest
                  run_install: false

            - name: Get pnpm store directory
              if: startsWith(github.ref, 'refs/heads/main')
              id: pnpm-cache
              shell: bash
              run: |
                  echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

            - name: Restore pnpm cache
              uses: actions/cache@v3
              if: startsWith(github.ref, 'refs/heads/main')
              id: cache
              with:
                  path: |
                      ${{ steps.pnpm-cache.outputs.STORE_PATH }}
                      node_modules/
                  key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-pnpm-store-

            - name: Check npm auth
              if: startsWith(github.ref, 'refs/heads/main')
              run: npm whoami

            - name: Setup Git
              if: startsWith(github.ref, 'refs/heads/main')
              uses: fregante/setup-git-user@v2

            - name: Semantic Versioning
              if: startsWith(github.ref, 'refs/heads/main')
              shell: bash
              run: NX_CLOUD_DISTRIBUTED_EXECUTION=false pnpm nx affected --base=$NX_BASE --head=$NX_HEAD -t version

            - name: Push
              uses: ad-m/github-push-action@master
              if: startsWith(github.ref, 'refs/heads/main')
              with:
                  github_token: ${{ secrets.PAT }}
                  branch: main
                  force: true
                  tags: true

            - name: Publish packages
              if: startsWith(github.ref, 'refs/heads/main')
              run: NX_CLOUD_DISTRIBUTED_EXECUTION=false pnpm nx affected --base=$NX_BASE --head=$NX_HEAD -t deploy
